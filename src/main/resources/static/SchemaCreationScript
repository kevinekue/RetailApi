-- -----------------------------------------------------
-- Schema retailapidb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS retailapidb;

-- -----------------------------------------------------
-- Schema retailapidb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS retailapidb DEFAULT CHARACTER SET utf8;
USE retailapidb;

-- -----------------------------------------------------
-- Table `retailapidb`.`Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS retailapidb.`Product`;

CREATE TABLE IF NOT EXISTS retailapidb.`Product`
(
    `ProductID`     INT                  NOT NULL AUTO_INCREMENT,
    `ProductName`   VARCHAR(45)          NOT NULL,
    `StockQuantity` DOUBLE ZEROFILL NOT NULL,
    `Unit`          VARCHAR(5)  DEFAULT 'Units',
    `UnitPrice`  DOUBLE ZEROFILL     NOT NULL,
    PRIMARY KEY (`ProductID`),
    UNIQUE INDEX `ProductID_UNIQUE` (`ProductID` ASC),
    UNIQUE INDEX `ProductName_UNIQUE` (`ProductName` ASC)
);


-- -----------------------------------------------------
-- Table `retailapidb`.`Category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS retailapidb.`Category`;

CREATE TABLE IF NOT EXISTS retailapidb.`Category`
(
    `CategoryName` VARCHAR(45) NOT NULL,
    PRIMARY KEY (`CategoryName`),
    UNIQUE INDEX `CategoryName_UNIQUE` (`CategoryName` ASC)
);


-- -----------------------------------------------------
-- Table `retailapidb`.`ProductInfo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS retailapidb.`ProductInfo`;

CREATE TABLE IF NOT EXISTS retailapidb.`ProductInfo`
(
    `Category`  VARCHAR(45) NOT NULL,
    `ProductID` INT         NOT NULL,
    INDEX `fk_ProductInfo_Category1_idx` (`Category` ASC),
    INDEX `fk_ProductInfo_Product1_idx` (`ProductID` ASC),
    CONSTRAINT `fk_ProductInfo_Category1`
        FOREIGN KEY (`Category`)
            REFERENCES retailapidb.`Category` (`CategoryName`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_ProductInfo_Product1`
        FOREIGN KEY (`ProductID`)
            REFERENCES retailapidb.`Product` (`ProductID`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
-- TODO: IN PRODUCTINFO TABLE GO FROM "PRODUCTID" TO "PRODUCTNAME"

-- -----------------------------------------------------
-- Table `retailapidb`.`Customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS retailapidb.`Customer`;

CREATE TABLE IF NOT EXISTS retailapidb.`Customer`
(
    `CustomerID` INT NOT NULL AUTO_INCREMENT,
    `CustomerName`  VARCHAR(45) NULL,
    PRIMARY KEY (`CustomerID`)
);


-- -----------------------------------------------------
-- Table `retailapidb`.`Order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS retailapidb.`Order`;

CREATE TABLE IF NOT EXISTS retailapidb.`Order`
(
    `OrderID`        INT  NOT NULL AUTO_INCREMENT,
    `CustomerID`     INT      NOT NULL,
    `OrderTimestamp` DATETIME NULL,
    `OrderStatus` VARCHAR(10)  DEFAULT 'Ready',
    PRIMARY KEY (`OrderID`),
    INDEX `fk_Order_Customer1_idx` (`CustomerID` ASC),
    CONSTRAINT `fk_Order_Customer1`
        FOREIGN KEY (`CustomerID`)
            REFERENCES retailapidb.`Customer` (`CustomerID`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Table `retailapidb`.`OrderInfo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS retailapidb.`OrderInfo`;

CREATE TABLE IF NOT EXISTS retailapidb.`OrderInfo`
(
    `OrderID`   INT NOT NULL,
    `ProductID` INT NOT NULL,
    `Quantity` DOUBLE ZEROFILL NOT NULL,
    `UnitPrice`  DOUBLE ZEROFILL  NOT NULL,
    INDEX `fk_Order_Info_Order1_idx` (`OrderID` ASC),
    INDEX `fk_Order_Info_Product1_idx` (`ProductID` ASC),
    CONSTRAINT `fk_Order_Info_Order1`
        FOREIGN KEY (`OrderID`)
            REFERENCES retailapidb.`Order` (`OrderID`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_Order_Info_Product1`
        FOREIGN KEY (`ProductID`)
            REFERENCES retailapidb.`Product` (`ProductID`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
